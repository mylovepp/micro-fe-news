{"version":3,"file":"src_navigation_MainNavigator_tsx.chunk.bundle","mappings":";;;;;;;;4PAAA,IAAAA,MAAA,CAAAC,sBAAA,CAAAC,mBAAA,8DACA,IAAAC,YAAA,CAAAD,mBAAA,wIACA,IAAAE,cAAA,CAAAH,sBAAA,CAAAC,mBAAA,+DAA4C,IAAAG,WAAA,CAAAH,mBAAA,qEAAAI,KAAA,MAAAC,YAAA,+FAM5C,GAAM,CAAAC,IAAI,CAAG,GAAAC,uCAA0B,EAAqB,CAAC,CAE7D,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,MACE,GAAAL,WAAA,CAAAM,GAAA,EAACH,IAAI,CAACI,SAAS,EACbC,aAAa,CAAE,CACbC,WAAW,CAAE,KACf,CAAE,CAAAC,QAAA,CACF,GAAAV,WAAA,CAAAM,GAAA,EAACH,IAAI,CAACQ,MAAM,EAACC,IAAI,CAAC,MAAM,CAACC,SAAS,CAAEC,sBAAc,CAAE,CAAC,CACvC,CAAC,CAErB,CAAC,CAAC,IAAAC,QAAA,CAEaV,aAAa,CAAAW,kBAAA,CAAAD,QAAA;;;;;;;;;;4PCrB5B,IAAApB,MAAA,CAAAC,sBAAA,CAAAC,mBAAA,8DACA,IAAAqB,YAAA,CAAArB,mBAAA,kFAEA,IAAAsB,mBAAA,CAAAtB,mBAAA,gKAAyF,IAAAG,WAAA,CAAAH,mBAAA,qEAAAI,KAAA,MAAAC,YAAA,+FAQzF,GAAM,CAAAkB,IAAI,CAAG,GAAAC,oDAAgC,EAAgB,CAAC,CAE9D,GAAM,CAAAP,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,MACE,GAAAd,WAAA,CAAAsB,IAAA,EAACF,IAAI,CAACb,SAAS,EAAAG,QAAA,EACb,GAAAV,WAAA,CAAAM,GAAA,EAACc,IAAI,CAACT,MAAM,EACVC,IAAI,CAAC,eAAe,CACpBC,SAAS,CAAE,SAAAA,UAAA,CAAI,CAAC,MAAO,GAAAb,WAAA,CAAAM,GAAA,EAACY,YAAA,CAAAK,IAAI,EAAAb,QAAA,CAAC,MAAI,CAAM,CAAC,EAAE,CAC1Cc,OAAO,CAAE,CACPC,KAAK,CAAE,MAAM,CACbC,UAAU,CAAE,cACd,CAAE,CACH,CAAC,CACF,GAAA1B,WAAA,CAAAM,GAAA,EAACc,IAAI,CAACT,MAAM,EACVC,IAAI,CAAC,iBAAiB,CACtBC,SAAS,CAAE,SAAAA,UAAA,CAAI,CAAC,MAAO,GAAAb,WAAA,CAAAM,GAAA,EAACY,YAAA,CAAAK,IAAI,EAAAb,QAAA,CAAC,QAAM,CAAM,CAAC,EAAE,CAC5Cc,OAAO,CAAE,CACPC,KAAK,CAAE,QAAQ,CACfC,UAAU,CAAE,SACd,CAAE,CACH,CAAC,CACF,GAAA1B,WAAA,CAAAM,GAAA,EAACc,IAAI,CAACT,MAAM,EACVC,IAAI,CAAC,kBAAkB,CACvBC,SAAS,CAAE,SAAAA,UAAA,CAAI,CAAC,MAAO,GAAAb,WAAA,CAAAM,GAAA,EAACY,YAAA,CAAAK,IAAI,EAAAb,QAAA,CAAC,SAAO,CAAM,CAAC,EAAE,CAC7Cc,OAAO,CAAE,CACPC,KAAK,CAAE,SAAS,CAChBC,UAAU,CAAE,SACd,CAAE,CACH,CAAC,EACY,CAAC,CAErB,CAAC,CAAC,IAAAX,QAAA,CAEaD,aAAa,CAAAE,kBAAA,CAAAD,QAAA","sources":["webpack:///./src/navigation/MainNavigator.tsx","webpack:///./src/navigation/TabsNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport TabsNavigator from './TabsNavigator';\n\nexport type MainStackParamList = {\n  Tabs: undefined;\n};\n\nconst Main = createNativeStackNavigator<MainStackParamList>();\n\nconst MainNavigator = () => {\n  return (\n    <Main.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}>\n      <Main.Screen name=\"Tabs\" component={TabsNavigator} />\n    </Main.Navigator>\n  );\n};\n\nexport default MainNavigator;\n","import React from 'react';\nimport { Text } from \"react-native\";\n\nimport {createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n\nexport type TabsParamList = {\n  HomeNavigator: undefined;\n  SearchNavigator: undefined;\n  AccountNavigator: undefined;\n};\n\nconst Tabs = createMaterialBottomTabNavigator<TabsParamList>();\n\nconst TabsNavigator = () => {\n  return (\n    <Tabs.Navigator>\n      <Tabs.Screen\n        name=\"HomeNavigator\"\n        component={()=>{return <Text>Home</Text>}}\n        options={{\n          title: 'Home',\n          tabBarIcon: 'home-battery',\n        }}\n      />\n      <Tabs.Screen\n        name=\"SearchNavigator\"\n        component={()=>{return <Text>Search</Text>}}\n        options={{\n          title: 'Screen',\n          tabBarIcon: 'magnify',\n        }}\n      />\n      <Tabs.Screen\n        name=\"AccountNavigator\"\n        component={()=>{return <Text>Account</Text>}}\n        options={{\n          title: 'Account',\n          tabBarIcon: 'account',\n        }}\n      />\n    </Tabs.Navigator>\n  );\n};\n\nexport default TabsNavigator;\n"],"names":["_react","_interopRequireDefault","require","_nativeStack","_TabsNavigator","_jsxRuntime","_this","_jsxFileName","Main","createNativeStackNavigator","MainNavigator","jsx","Navigator","screenOptions","headerShown","children","Screen","name","component","TabsNavigator","_default","exports","default","_reactNative","_materialBottomTabs","Tabs","createMaterialBottomTabNavigator","jsxs","Text","options","title","tabBarIcon"],"sourceRoot":""}